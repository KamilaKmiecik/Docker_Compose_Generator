@model Docker_Compose_Generator.Models.DockerComposeCreateDto

@{
    ViewData["Title"] = "Create Docker Compose";
}

<h2>Create Docker Compose</h2>

<form asp-action="CreateUsingUI" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="Version" class="control-label"></label>
        <input asp-for="Version" class="form-control" />
        <span asp-validation-for="Version" class="text-danger"></span>
    </div>

    <h3>Services</h3>
    <div id="services-container">
    </div>

    <button type="button" class="btn btn-success" onclick="addService()">Add Service</button>

    <button type="submit" class="btn btn-primary">Create Compose File</button>
</form>

@section Scripts {
    <script>
        let serviceIndex = 0;

        function addService() {
            const servicesContainer = document.getElementById('services-container');
            const serviceDiv = document.createElement('div');
            serviceDiv.classList.add('service');
            serviceDiv.innerHTML = `
                <h4>Service ${serviceIndex + 1}</h4>
                <div class="form-group">
                    <label for="Services_${serviceIndex}__Name">Name</label>
                    <input name="Services[${serviceIndex}].Name" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="Services_${serviceIndex}__Image">Image</label>
                    <input name="Services[${serviceIndex}].Image" class="form-control" />
                </div>
                <div id="ports-container-${serviceIndex}" class="form-group">
                    <label for="Services_${serviceIndex}__Ports">Ports</label>
                    <button type="button" class="btn btn-info" onclick="addField('ports-container-${serviceIndex}', 'Services[${serviceIndex}].Ports')">Add Port</button>
                </div>
                <div id="volumes-container-${serviceIndex}" class="form-group">
                    <label for="Services_${serviceIndex}__Volumes">Volumes</label>
                    <button type="button" class="btn btn-info" onclick="addField('volumes-container-${serviceIndex}', 'Services[${serviceIndex}].Volumes')">Add Volume</button>
                </div>
                <div id="environment-container-${serviceIndex}" class="form-group">
                    <label for="Services_${serviceIndex}__Environment">Environment</label>
                    <button type="button" class="btn btn-info" onclick="addField('environment-container-${serviceIndex}', 'Services[${serviceIndex}].Environment')">Add Environment Variable</button>
                </div>
                <div class="form-group">
                    <label for="Services_${serviceIndex}__RestartPolicy">Restart Policy</label>
                    <input name="Services[${serviceIndex}].RestartPolicy" class="form-control" />
                </div>
            `;
            servicesContainer.appendChild(serviceDiv);
            serviceIndex++;
        }

        function addField(containerId, fieldName) {
            const container = document.getElementById(containerId);
            const input = document.createElement('input');
            input.name = fieldName;
            input.classList.add('form-control');
            input.style.marginTop = '5px';
            container.appendChild(input);
        }
    </script>
}
