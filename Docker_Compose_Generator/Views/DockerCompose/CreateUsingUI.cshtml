@model DockerComposeCreateDto

<form asp-action="CreateUsingUI" asp-controller="DockerCompose" method="post" id="docker-compose-form">
    <div class="app-container">

        <main class="app-main">

            @if (TempData["ErrorMessage"] != null)
            {
                <script>
                    alert('@TempData["ErrorMessage"]');
                </script>
            }

            <div class="sections-container">
                <section id="services-section" class="section">
                    <h2>Services</h2>
                    <div id="services-container">
                        @if (Model.Services != null && Model.Services.Any())
                        {
                            for (int i = 0; i < Model.Services.Count; i++)
                            {
                                <div>
                                    @Html.Partial("_ServicePartial", Model.Services[i], new ViewDataDictionary(ViewData) { { "index", i } })
                                </div>
                            }
                        }
                    </div>
                    <button type="button" id="add-service" class="add-button">Add Service</button>
                </section>

                <section id="networks-section" class="section">
                    <h2>Networks</h2>
                    <div id="networks-container">
                        @if (Model.Networks != null && Model.Networks.Any())
                        {
                            for (int i = 0; i < Model.Networks.Count; i++)
                            {
                                <div>
                                    @Html.Partial("_NetworkPartial", Model.Networks[i], new ViewDataDictionary(ViewData) { { "index", i } })
                                </div>
                            }
                        }
                    </div>
                    <button type="button" id="add-network" class="add-button">Add Network</button>
                </section>

                <section id="volumes-section" class="section">
                    <h2>Volumes</h2>
                    <div id="volumes-container">
                        @if (Model.Volumes != null && Model.Volumes.Any())
                        {
                            for (int i = 0; i < Model.Volumes.Count; i++)
                            {
                                <div>
                                    @Html.Partial("_VolumePartial", Model.Volumes[i], new ViewDataDictionary(ViewData) { { "index", i } })
                                </div>
                            }
                        }
                    </div>
                    <button type="button" id="add-volume" class="add-button">Add Volume</button>
                </section>
            </div>

        </main>

        <footer class="app-footer">
            <button type="submit" class="submit-button">Generate Docker Compose</button>
        </footer>
    </div>
</form>
