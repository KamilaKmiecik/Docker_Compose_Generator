@model Docker_Compose_Generator.Models.ServiceDTO
@{
    var index = (int)ViewData["index"];
}

<div id="service-item-@index" class="card service-item" data-index="@index">
    
    <label>Name:</label>
    <input type="text" name="Services[@index].Name" value="@Model.Name" placeholder="Enter service name" required />

    <label>Image:</label>
    <input type="text" name="Services[@index].Image" value="@Model.Image" placeholder="Enter service image" required />

    <!-- Restart Policy -->
    <div class="restart-policy">
        <h4>Restart Policy</h4>
        <label>Condition:</label>
        <select name="Services[@index].RestartPolicy.Condition">
            <option value="no">No</option>
            <option value="always" >Always</option>
            <option value="on-failure">On-Failure</option>
            <option value="unless-stopped">Unless-Stopped</option>
        </select>
        <label>Max Retries:</label>
        <input type="number" name="Services[@index].RestartPolicy.MaxRetries" value="@Model.RestartPolicy?.MaxRetries" placeholder="Enter max retries" />
        <label>Delay:</label>
        <input type="text" name="Services[@index].RestartPolicy.Delay" value="@Model.RestartPolicy?.Delay" placeholder="e.g., 5s, 2m" />
    </div>

    <!-- Environment Variables -->
    <div class="environment">
        <h4>Environment Variables</h4>
        <div id="env-container-@index">
            @if (Model.Environment != null)
            {
                for (int i = 0; i < Model.Environment.Count; i++)
                {
                    <div class="env-item">
                        <label>Key:</label>
                        <input type="text" name="Services[@index].Environment[@i].Key" value="@Model.Environment[i].Key" placeholder="Key" />
                        <label>Value:</label>
                        <input type="text" name="Services[@index].Environment[@i].Value" value="@Model.Environment[i].Value" placeholder="Value" />
                        <button type="button" class="remove-env-button">Remove</button>
                    </div>
                }
            }
        </div>
        <button type="button" class="add-env-button" data-service-index="@index">Add Environment Variable</button>
    </div>

    <!-- Ports -->
    <div class="ports">
        <h4>Ports</h4>
        <div id="port-container-@index">
            @if (Model.Ports != null)
            {
                for (int i = 0; i < Model.Ports.Count; i++)
                {
                    <div class="port-item">
                        <label>Host Port:</label>
                        <input type="number" name="Services[@index].Ports[@i].HostPort" value="@Model.Ports[i].HostPort" placeholder="Host Port" />
                        <label>Container Port:</label>
                        <input type="number" name="Services[@index].Ports[@i].ContainerPort" value="@Model.Ports[i].ContainerPort" placeholder="Container Port" />
                        <label>Protocol:</label>
                        <select name="Services[@index].Ports[@i].Protocol">
                            <option value="tcp">TCP</option>
                            <option value="udp" >UDP</option>
                        </select>
                        <button type="button" class="remove-port-button">Remove</button>
                    </div>
                }
            }
        </div>
        <button type="button" class="add-port-button" data-service-index="@index">Add Port</button>
    </div>

    <!-- Volumes -->
    <div class="volumes">
        <h4>Volumes</h4>
        <div id="volume-container-@index">
            @if (Model.Volumes != null)
            {
                for (int i = 0; i < Model.Volumes.Count; i++)
                {
                    <div class="volume-item">
                        <label>Source:</label>
                        <input type="text" name="Services[@index].Volumes[@i].Source" value="@Model.Volumes[i].Source" placeholder="Source" />
                        <label>Target:</label>
                        <input type="text" name="Services[@index].Volumes[@i].Target" value="@Model.Volumes[i].Target" placeholder="Target" />
                        <button type="button" class="remove-volume-button">Remove</button>
                    </div>
                }
            }
        </div>
        <button type="button" class="add-volume-button" data-service-index="@index">Add Volume</button>
    </div>


    <button type="button" class="remove-button" onclick="removeService(@index)">Remove service</button>

</div>
