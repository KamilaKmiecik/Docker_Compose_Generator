@model Docker_Compose_Generator.Models.NetworkDTO
@{
    var index = (int)ViewData["index"];
}

<div id="network-item-@index"  class="card network-item" data-index="@index">
    <label>Name:</label>
    <input type="text" name="Networks[@index].Name" value="@Model.Name" placeholder="Enter network name" required />

    <label>Driver:</label>
    <select name="Networks[@index].Driver">
        <option value="bridge"> Bridge</option>
        <option value="host">Host</option>
        <option value="overlay" >Overlay</option>
    </select>

    <div class="form-row">
    <label for="internal-checkbox-@index">Internal:</label>
    <input id="internal-checkbox-@index" type="checkbox" name="Networks[@index].Internal" value="true" />


    </div>


    <!-- IPAM Configuration -->
    <div class="ipam">
        <h4>IPAM Configuration</h4>
        <div id="ipam-configurations-@index">
            @if (Model.Ipam?.Configurations != null)
            {
                for (int i = 0; i < Model.Ipam.Configurations.Count; i++)
                {
                    <div class="ipam-item">
                        <label>Subnet:</label>
                        <input type="text" name="Networks[@index].Ipam.Configurations[@i].Subnet" value="@Model.Ipam.Configurations[i].Subnet" />

                        <label>Gateway:</label>
                        <input type="text" name="Networks[@index].Ipam.Configurations[@i].Gateway" value="@Model.Ipam.Configurations[i].Gateway" />

                        <button type="button" class="remove-ipam-button">Remove IPAM</button>
                    </div>
                }
            }
        </div>
        <button type="button" class="add-ipam-button" data-network-index="@index">Add IPAM Configuration</button>
    </div>

    <!-- Driver Options -->
    <div class="driver-options">
        <h4>Driver Options</h4>
        <div id="driver-options-@index">
            @if (Model.DriverOptions != null)
            {
                foreach (var option in Model.DriverOptions)
                {
                    <div class="driver-option-item">
                        <label>Key:</label>
                        <input type="text" name="Networks[@index].DriverOptions[@option.Key]" value="@option.Key" />

                        <label>Value:</label>
                        <input type="text" name="Networks[@index].DriverOptions[@option.Key]" value="@option.Value" />

                        <button type="button" class="remove-driver-option-button">Remove Option</button>
                    </div>
                }
            }
        </div>
        <button type="button" class="add-driver-option-button" data-network-index="@index">Add Driver Option</button>
    </div>

    <button type="button" class="remove-button" onclick="removeNetwork(@index)">Remove network</button>


</div>
